openapi: 3.0.0

info:
  title: "RPaaS API"
  description: "This file specification describes the web API of the Reverse Proxy as a Service."
  version: 0.4.0
  contact:
    name: "Tsuru PaaS"
    email: tsuru@corp.globo.com
    url: "https://github.com/tsuru/rpaas"

paths:
  /admin/plugin:
    get:
      summary: "Returns a Tsuru plugin to manage the RPaaS service through the command line interface"
      tags:
        - plugins
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: string

  /plugin:
    get:
      summary: "Returns a Tsuru plugin to use the RPaaS service through the command line interface"
      tags:
        - plugins
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: string

  /resources:
    post:
      summary: "Creates an instance"
      security:
        - BasicAuth: []
      tags:
        - resources
      requestBody:
        $ref: "#/components/requestBodies/ResourceBody"
      responses:
        "201":
          description: "Created"
          content:
            text/plain:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/InsufficientParameters"
        "403":
          $ref: "#/components/responses/QuotaExceeded"
        "405":
          $ref: "#/components/responses/InstanceCreationDisabled"
        "409":
          $ref: "#/components/responses/InstanceAlreadyExists"

  /resources/flavors:
    get:
      summary: "Returns a list of available flavors"
      security:
        - BasicAuth: []
      tags:
        - resources
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Flavor"

  /resources/plans:
    get:
      summary: "Returns a list of available plans"
      security:
        - BasicAuth: []
      tags:
        - resources
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plan"

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  requestBodies:
    ResourceBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Resource"

  responses:
    InstanceAlreadyExists:
      description: "The instance already exists"
      content:
        text/plain:
          schema:
            $ref: "#/components/schemas/Error"

    InstanceCreationDisabled:
      description: "The instance creation is disabled"
      content:
        text/plain:
          schema:
            $ref: "#/components/schemas/Error"

    InsufficientParameters:
      description: "Some mandatory input was not assigned"
      content:
        text/plain:
          schema:
            $ref: "#/components/schemas/Error"

    QuotaExceeded:
      description: "Quota exceeded"
      content:
        text/plain:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: string

    Flavor:
      type: object
      properties:
        name:
          type: string
          example: "dsr"
        description:
          type: string
          example: "A little description about Direct Server Return"
        config:
          type: string
          example: {
            FLAVOR_CONFIG_KEY: "some value for example"
          }

    Plan:
      type: object
      properties:
        name:
          type: string
          example: "large"
        description:
          type: string
          example: "4 vCPUs + 8GB RAM"
        config:
          type: object
          example: {
            PLAN_CONFIG_KEY: "some value for example"
          }

    Resource:
      type: object
      properties:
        name:
          type: string
          pattern: "^[0-9a-z-]+$"
          example: "my-rpaas-instance"
        team:
          type: string
          example: "my-team"
        flavor:
          type: string
          example: "flavor-name"
        plan:
          type: string
          example: "plan-name"
      required:
        - name
        - team
